#############################################
## YBYRÁ       :                      v1.0 ##
## Machado, DJ : http://about.me/machadodj ##
## Provisional                             ##
##         URL :       http://goo.gl/9C5kq ##
## Email       :          machadodj@usp.br ##
#############################################

########### GENERAL  GUIDELINES #############

###  WARNINGS ###

#(1) We strongly suggest users to use only
#   0-9, a-z, A-Z, and _ for file and
#   terminal names. Avoid the use of
#   special characters.

#(2) Put YBYRÁ, the configuration file and
#   the tree file(s) all in the same
#   directory.

#(3) You may comment text in the
#    configuration file using # or %.

### TREE FORMAT ###

#Trees should look like these:
#  ((Terminal_1 : branch label, Terminal_2 :
#  branch label) : 2, Terminal_3 : branch
#  label)[comment or tree length];
#Branch labels and comments are optional.

%Examples:
%  ((A:1.0,B:0.75):0.899,C:0.799)[.100];
%  ((A:1.0,B:0.75):0.899,C:0.799);
%  ((A,B),C)[.100];
%  ((A,B),C);

### HOW TO RUN ###

#On a terminal window, move to the working
#directory and execute the following command
#line:

%python ybyra.py CONFIGURATION.txt 

#If your trees have terminals that are not in
#every tree, execute YBYRÁ with the
#-different_terminals (-dt) option.
#Dependence: the Biopython module.

%python ybyra.py -dt CONFIGURATION.txt

#YBYRÁ accompanies a GUI script to help users
#write configuration files.
#To execute it, move to the working directory
#in a terminal window and execute it using
#Python.
#Dependence: TKinter.
#Execute the the GUI from a terminal:

%python makeYbyraConfiguration.py

######## SAMPLE CONFIGURATION FILE ##########

## ID

#YBYRÁ will give a common ID to all files
#generated using this configuration file.
#Deafult: "output".

%Example:
%>Id = myProjectId

	>id = sa_aula

## FILES

#Alternatively, you may give YBYRÁ a list of
#files with trees in Newick format. if you do
#so, YBYRÁ will automatically treat each file
#as a separate pool.
#If you provide a list of files, any singular
#file or pools provided elsewhere will be
#ignored.

%Example:
% <begin files
%  trees1.tre[poolOne];
%  trees2.tre[poolTwo];
%  trees3.tre[poolThree]
% end files>

	<begin files
		trees_m111.tre[1:1:1];
		trees_m211.tre[2:1:1];
		trees_m411.tre[4:1:1];
	end files>

## ROOT

#Do you want YBYRÁ to root all your trees?
#If yes, type the name of one terminal you
#want to set as root.
#Rooting trees requires Bio.Phylo.
#Default: "N" (do not root).
#Dependences: the Biopyhton module.

%Example:
%>root = myRoot

#	>root = root

## N (select a tree)

#Select a single tree as your working
#hypothesis.
#Default: the first tree in the first file

%Example (the 10th tree in treeFile.tre):
%>n = 10 [treeFile.tre]

	>n = 1 [trees_m111.tre]

## POOLS

#If you decide to work with a single tree
#file, you may set sub-groups of trees
#within this file. We call these groups
#"pools".
#NOTE: the numbers correspond to the order
#of the trees in the concatenated tree file.

%Example for four different pools:
% <begin pools
%  1-3,5,7,9-10[identifier1];
%  6,8,11-20[identifier2];
%  21-30[identifier3];
% end pools>

#	<begin pools
#		2-4[Group1];
#		5-7[Group2];
#		8-10[Group3];
#	end pools>

#############################################

### TREE COMPARISON ###

## OPT

#Available options:
#  (1) Compares a single tree to all others
#      and find exact matches
#  (2) List clades/splits and saves them in
#      file
#  (3) Compare a single tree to all others:
#      calculates local distance between
#      trees based on shared splits between
#      each
#      pair
#  (4) Compare a single tree to all others:
#      calculates global distance between
#      trees considering the splits of all
#      trees in file
#  (N) Do nothing (DEFAULT)
#WARNING: current version does not implement
#any kind of correction for polytomies

%Example:
%>opt = 1

	>opt = 1

## COMPARE

#You can tell YBYRÁ to compare splits
#or clades. Comparing splits is usefull
#to compare unrooted trees or trees with
#different roots.
#Type 0 for splits (default option).
#Type 1 for clades (root dependent).

%Example:
%>compare = 0

	>compare = 1

### SENSITIVITY ANALYSIS ###

## SA

#Proceed with sensitivity analysis?
#Answer "yes" or "no" (the defualt is "no").

%Example:
%>sa = yes

	>sa = Yes

## RUG

#Print Navajo rugs (SVG files)?
#Answer "yes" or "no" (the defult is "no").
#Dependence: svgwrite.

%Example:
%>rug = yes.

	>rug = YES

## STROKE

#Stroke color for SVG files. Accepts color
#names or RGB codes.
#The default is "black".

%Examples:
%>stroke = blue
%>stroke = rgb(25,25,112)

%	>stroke = black

## COLOR

#Predominant color for SVG files.
#Accepted collors: red, orange, yellow,
#green, blue, indigo, violet, black or "n".
#Choose "n" for only black or white cells.
#Default is "black" (shades of gray).
#To display only black or white cells.

%Example:
%>color = indigo

	>color = blue

## TEXT

#Do you want YBYRÁ to print the prevalence
#of each clade or split into each cell?
#  (N) No.
#  (P) Yes, print percentage (default).
#  (R) Yes, print ratio (wins : total).

%example:
%>text = p

%	>text = r

### OTHER OPTIONS ###

## VERBOSE

#If you wish to disable verbose, comment or
#remove the next command line.

	>verbose
	
## CLADES

#You can select specific clades you want to
#analyze.

%Example:
%   <begin clades
%    A,B;
%    B,A;
%    C,D;
%    D,root
%   end clades>

## TREES

#If you can give a specific tree or sub-tree
#to YBYRÁ. These trees will be read as YBYRÁ
#rooted trees. YBYRÁ will look for all the
#clades in those trees.

%Example:
%   <begin trees
%    (A,B,(C,
%    (D,root)));
%    (A,(B,(C,
%    (D,root))));
%   end trees>

#If no clades and no trees are given,
#all splits or clades will be analyzed.

############## WILDCARD TAXA ################

## MSDIST

#YBYRÁ can help you locate terminals that are
#more responsible for the matching split
#distance between trees.
#This is a three-steps procedure.
#(1) From yours YBYRÁ's directory, run YBYRÁ
#    with the -msdist (-msd) option.

%python ybyra.py -msd CONFIGURATION.txt

#(2) Move the PRUNED tree files and the
#    MSDIST shell script to the MSdist/bin/
#    directory and execute the MSDIST script
#    from there.

%sh MSDIST_file.sh

#(3) Copy the MSDIST output text files back
#    to where your YBYRÁ's directory. Execute
#    YBYRÁ with the -examine_msdists (-em)
#    option. This will generate the distance
#    matrices and list terminals according to
#    how much they affect match split.

%python ybyra.py -em CONFIGURATION.txt

#Dependencies: Biopython and MSdist >0.5.
#MSdist require Java to run.
#Note: other comparison options will be
#ignored.
